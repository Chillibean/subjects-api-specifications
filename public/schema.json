{
  "openapi": "3.0.0",
  "info": {
    "version": "1.1.0",
    "title": "Subjects API",
    "description": "This is the api specifications for all things related to subjects.",
    "contact": {
      "name": "ChilliPharm",
      "url": "https://www.chillipharm.com"
    }
  },
  "tags": [
    {
      "name": "Example",
      "description": "Example endpoints"
    }
  ],
  "servers": [
    {
      "url": "http://chillipharm.test:3000/api/v1",
      "description": "Local development"
    },
    {
      "url": "https://www.chillipharm.com/api/v1",
      "description": "Production"
    }
  ],
  "paths": {
    "/accounts/{account_id}/sites/{site_identifier}/subjects": {
      "get": {
        "summary": "Get all subjects for a site",
        "security": [
          {
            "userSessionKey": []
          },
          {
            "chillipharmSession": []
          }
        ],
        "operationId": "getSubjects",
        "description": "Get all subjects for a site",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "site_identifier",
            "in": "path",
            "description": "The site identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SITE1"
            }
          }
        ],
        "tags": ["Example"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subjects"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "userSessionKey": {
        "type": "apiKey",
        "in": "cookie",
        "name": "user_session_key",
        "description": "User session key cookie"
      },
      "chillipharmSession": {
        "type": "apiKey",
        "in": "cookie",
        "name": "_chillipharm_session",
        "description": "ChilliPharm session cookie"
      }
    },
    "schemas": {
      "Subject": {
        "description": "A subject",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The subject id",
            "example": 1
          },
          "subject_number": {
            "type": "string",
            "description": "The serial number of the subject",
            "example": "E001004"
          },
          "current_study_event": {
            "type": "string",
            "description": "The study event the subject is currently in",
            "example": "DAY1"
          },
          "created_at": {
            "type": "string",
            "description": "Date time for when the subject was created",
            "example": "2024-01-02T11:06:48.566Z"
          }
        }
      },
      "Subjects": {
        "description": "A list of subjects",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Subject"
        }
      },
      "Error": {
        "description": "An error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Bad request. Missing or invalid input parameters."
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request. Missing or invalid input parameters.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. Missing or invalid authentication credentials.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict. The request could not be completed due to a conflict with the current state of the resource.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error. Please contact support.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found. The requested resource was not found.",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error",
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "The error message",
                  "example": "Not found",
                  "enum": ["Not found"]
                }
              },
              "required": ["error"],
              "additionalProperties": false
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. The request was valid, but the server is refusing action.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "The error message",
                  "example": "You do not have sufficient permission to perform this action",
                  "enum": [
                    "You do not have sufficient permission to perform this action",
                    "Forbidden"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
